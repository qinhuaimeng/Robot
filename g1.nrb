<?xml version="1.0" encoding="gb2312"?>
<File robottype="NST-STM-YD" filetype="4" ver="1.0.0" author=""><PortConfig id=" value="></PortConfig><Data>#include "main.h"
#define f0 EXP_analog(0,KZ[1][7])
#define f1 EXP_analog(0,KZ[1][6])
#define f2 EXP_analog(0,KZ[1][5])
#define f3 EXP_analog(0,KZ[1][4])
#define f4 EXP_analog(0,KZ[1][3])
#define f5 EXP_analog(0,KZ[1][2])
#define f6 EXP_analog(0,KZ[1][1])
#define f7 EXP_analog(0,KZ[1][0])

#define b0 EXP_analog(1,KZ[1][0])
#define b1 EXP_analog(1,KZ[1][1])
#define b2 EXP_analog(1,KZ[1][2])
#define b3 EXP_analog(1,KZ[1][3])
#define b4 EXP_analog(1,KZ[1][4])
#define b5 EXP_analog(1,KZ[1][5])
#define b6 EXP_analog(1,KZ[1][6])
#define b7 EXP_analog(1,KZ[1][7])

//#define AA digital(3)                  //两个中间传感器
//#define CC digital(6)

#define AA analog(3)
#define CC analog(6)

#define juli1 digital(1)               //距离传感器（只有0和1，,亮，0代表不亮。）的四个接口左一右二，从上到下。


void zuozhuan(int s);
void zuozhuan1(int s);
void zuozhuan2(int s);
void zuozhuan3(int s);
void zuozhuan4(int s);
void zuohouzhuan(int s);
void dingwei(int s);
void dingwei3(int s,int m);
void houdingwei(int s);
void houdingwei1(int s);
void houdingwei1(int s);
void youzhuan();
void youzhuan1(int s);
void youzhuan2(int s);
void youzhuan3(int s);
void youzhuan4(int s);
void youzhuan6(int s);
void xunxian(int s);
void xunxian1(int s);
void xunxian2(int s);
void pianxunxian(int s);
void xunwanxian(int s);
void xunwanxian1(int s);
void houxunxian1(int s);
void houxunxian2(int s);




int i,j,q;
int A=1000;
int B=2600;
int C=2400;
int D=2900;
int E=1000;
int f[2];


void move(int Left,int Right){
	motor(1,Left);
	motor(0,Right);
}

void move1(int Left,int Right){
	motor(1,Left);
	motor(0,Right);
	sleep(5);
}

void move2(int Left,int Right){
	motor(1,Left);
	motor(0,Right);
	sleep(5);
}

void move3(int Left,int Right){
	motor(1,Left);
	motor(0,Right);
	sleep(1);
}


//巡线

//寻正常直线
void xunxian(int s){           //正常情况下应该在f3和f4
 while(f0&lt;A&amp;&amp;f7&lt;A){
		if(f3&gt;A&amp;&amp;f4&gt;A)
		move(s,s);
		else if(f3&gt;A&amp;&amp;f4&lt;A)      //偏右，在f3和f2之间
		move(s,s+10);
		else if(f3&lt;A&amp;&amp;f4&gt;A)      //偏左，在f4和f5
		move(s+10,s);
		else if(f2&gt;A&amp;&amp;f5&lt;A)      //偏右幅度大
		move(s,s+15);
		else if(f2&lt;A&amp;&amp;f5&gt;A)      //偏左
		move(s+15,s);
		else if(f1&gt;A&amp;&amp;f6&lt;A)      //偏右
		move(s,s+20);
		else if(f1&lt;A&amp;&amp;f6&gt;A)      //偏左幅度大
		move(s+20,s);
		else
		move(s,s);
	}
}

//寻正常直线,左右差值加大
void xunxian2(int s){           //正常情况下应该在f3和f4
 while(f0&lt;A&amp;&amp;f7&lt;A){
		if(f3&gt;A&amp;&amp;f4&gt;A)
		move(s,s);
		else if(f3&gt;A&amp;&amp;f4&lt;A)      //偏右，在f3和f2之间
		move(-s,s+30);
		else if(f3&lt;A&amp;&amp;f4&gt;A)      //偏左，在f4和f5
		move(s+30,-s);
		else if(f2&gt;A&amp;&amp;f5&lt;A)      //偏右幅度大
		move(-s,s+40);
		else if(f2&lt;A&amp;&amp;f5&gt;A)      //偏左
		move(s+40,-s);
		else if(f1&gt;A&amp;&amp;f6&lt;A)      //偏右
		move(-s,s+50);
		else if(f1&lt;A&amp;&amp;f6&gt;A)      //偏左幅度大
		move(s+50,-s);
		else
		move(s,s);
	}
}





//寻弯线
void xunwanxian(int s){              //正常情况下应该在f3和f4
         while(f0&lt;A||f7&lt;A)      {
		if  (f3&gt;A&amp;&amp;f4&gt;A)      move(s,s);
		else if(f3&gt;A&amp;&amp;f4&lt;A)      move(-s,s+5);       //小偏右，右加速
		else if(f3&lt;A&amp;&amp;f4&gt;A)      move(s+5,-s);       //小偏左，左加速
		else if(f2&gt;A&amp;&amp;f5&lt;A)      move(-s,s+5);       //中偏右，右加速
		else if(f2&lt;A&amp;&amp;f5&gt;A)      move(s+5,-s);       //中偏左，左加速
		else if(f1&gt;A&amp;&amp;f6&lt;A)      move(-s,s+5);       //大偏右，右加速
		else if(f1&lt;A&amp;&amp;f6&gt;A)      move(s+5,-s);       //大偏左，左加速
	    else                     move(s,s);
		}
}

//回家寻弯线
void xunwanxian1(int s){              //正常情况下应该在f3和f4
         while(AA&lt;E&amp;&amp;CC&gt;E)      {
		 if(f3&gt;A&amp;&amp;f4&gt;A)      move(s,s);
		else if(f3&gt;A&amp;&amp;f4&lt;A)      move(-s,s+5);       //小偏右，右加速
		else if(f3&lt;A&amp;&amp;f4&gt;A)      move(s+5,-s);       //小偏左，左加速
		else if(f2&gt;A&amp;&amp;f5&lt;A)      move(-s-5,s+5);       //中偏右，右加速
		else if(f2&lt;A&amp;&amp;f5&gt;A)      move(s+5,-s-5);       //中偏左，左加速
		else if(f1&gt;A&amp;&amp;f6&lt;A)      move(-s-5,s+10);       //大偏右，右加速
		else if(f1&lt;A&amp;&amp;f6&gt;A)      move(s+10,-s-5);       //大偏左，左加速
		else if(f0&gt;A&amp;&amp;f7&lt;A)      move(-s-5,s+15);       //超偏右，右加速
		else if(f7&gt;A&amp;&amp;f0&lt;A)      move(s+15,-s-5);        //超偏左，左加速
	    else                     move(s,s);
		}
}


/*//后巡线
void houxunxian(int s){
	while(b0&lt;A&amp;&amp;b7&lt;A){
		if(b3&gt;A&amp;&amp;b4&gt;A)
		move(-s,-s);
		else if(b3&gt;A&amp;&amp;b4&lt;A)      //偏右，在f3和f2之间
		move(-s-10,-s);          //往左，右边速度大
		else if(b3&lt;A&amp;&amp;b4&gt;A)      //偏左，在f4和f5
		move(-s,-s-10);          //往右，左边速度大
		else if(b2&gt;A&amp;&amp;b5&lt;A)      //偏右幅度大
		move(-s-15,-s);          //往左，右边速度大
		else if(b2&lt;A&amp;&amp;b5&gt;A)      //偏左
		move(-s,-s-15);
		else if(b1&gt;A&amp;&amp;b6&lt;A)      //偏右
		move(-s-20,-s);
		else if(b1&lt;A&amp;&amp;b6&gt;A)      //偏左幅度大
		move(-s,-s-20);
		else
		move(-s,-s);
	}
}*/

//后巡线
void houxunxian(int s){
	while(b0&lt;A&amp;&amp;b7&lt;A){
		if(b3&gt;A&amp;&amp;b4&gt;A)       	move(-s,-s);
		else if(b3&gt;A&amp;&amp;b4&lt;A)   	move(-s-10,-s);    //小偏右，右增速
		else if(b3&lt;A&amp;&amp;b4&gt;A)  	move(-s,-s-10);    //小偏左，左增速
		else if(b2&gt;A&amp;&amp;b5&lt;A)     move(-s-15,-s);    //中偏右，右增速
		else if(b2&lt;A&amp;&amp;b5&gt;A)  	move(-s,-s-15);    //中偏左，左增速
		else if(b1&gt;A&amp;&amp;b6&lt;A)    	move(-s-20,-s);    //大偏右，右增速
		else if(b1&lt;A&amp;&amp;b6&gt;A)     move(-s,-s-20);    //大偏左，左增速
		else                    move(-s,-s);

	}
}

//不巡线，巡线偏
void pianxunxian(int s){                                 //偏巡线（需要测试）
while(f0&lt;A&amp;&amp;f7&lt;A)
		{
		if(f2&gt;A&amp;&amp;f3&gt;A)         move(s,s);
		else if(f2&lt;A&amp;&amp;f3&gt;A)    move(s,s+5);        //小偏左，左加速
		else if(f3&gt;A&amp;&amp;f2&lt;A)    move(s+5,s);        //小偏右，右加速
		else if(f1&gt;A&amp;&amp;f4&lt;A)    move(s+10,s);       //中偏右，右加速
		else if(f1&lt;A&amp;&amp;f4&gt;A)    move(s,s+10);       //中偏左，左加速
		else if(f5&gt;A&amp;&amp;f6&lt;A)    move(s+20,s);       //大偏右，右加速
		else if(f5&lt;A&amp;&amp;f6&gt;A)    move(s,s+20);       //大偏左，左加速
		else
		move(s,s);
	}
}

void houxunxian2(int s){
	while(CC&gt;E&amp;&amp;AA&lt;E)
	{
		if(b3&gt;A&amp;&amp;b4&gt;A)       	move(-s,-s);
		else if(b3&gt;A&amp;&amp;b4&lt;A)   	move(-s-10,-s);    //小偏右，右增速
		else if(b3&lt;A&amp;&amp;b4&gt;A)  	move(-s,-s-10);    //小偏左，左增速
		else if(b2&gt;A&amp;&amp;b5&lt;A)     move(-s-15,-s);    //中偏右，右增速
		else if(b2&lt;A&amp;&amp;b5&gt;A)  	move(-s,-s-15);    //中偏左，左增速
		else if(b1&gt;A&amp;&amp;b6&lt;A)    	move(-s-20,-s);    //大偏右，右增速
		else if(b1&lt;A&amp;&amp;b6&gt;A)     move(-s,-s-20);    //大偏左，左增速
		else                    move(-s,-s);
	}
}

//右转

//给定值右转
void youzhuan() {
  while(f7&lt;A)
	 move(10,-10);
	while(f4&lt;A){
	move(10,-10);
	}
}

//右转幅度小
void youzhuan1(int s){
	while(b7&lt;A)
	move(s+5,s);
	while(b3&lt;A);
	move(s+5,s);

   }

//正常右转，用前排传感器定位
void youzhuan2(int s){
	while(f7&lt;A)
	move(s,-s);
	while(f4&lt;A);
	move(s,-s);
}

//右转幅度比较大
void youzhuan3(int s){
while(f7&lt;A)
	move(s+2,-s);
	while(f4&lt;A)
	move(s+2,-s);
}

//正常右转，用后排传感器定位
void youzhuan4(int s){
	while(b7&lt;A)
	move(s,-s);
	while(b4&lt;A)
	move(s,-s);
}


void youzhuan6(int s)
{
	while(f7&lt;A)
	move(s-5,-s);
	while(f4&lt;A)
	move(s-5,-s);
}


//左转

//左转幅度较小
void zuozhuan1(int s){
  while(f0&lt;A)
	move(-s,s-2);
	while(f3&lt;A)
	move(-s,s-2);
}



//左转
void zuozhuan(int s){
    while(f0&lt;A)
	move(-s,s);
	while(f3&lt;A);
	move(-s,s);
}

//左转
void zuozhuan3(int s){
    while(f0&lt;A)
	move(-s,s-13);
	while(f3&lt;A)
	move(-s,s-13);
}

void zuozhuan4(int s){
	while(b7&lt;A)
	move(-s,s);
	while(b4&lt;A)
	move(-s,s);
}
//盲区左转
void zuozhuan2(int s){
	int i;
	for(i=0;i&lt;240000;i++)
	move(-s,s);
}
//调整
/*void tiaozheng()
{
    while(AA&lt;E)
	move(5,0);
	while(CC&gt;E)
	move(0,5);

}*/


//左后传
void zuohouzhuan(int s){
	move(0,0);    sleep(0.1);
	while(b7&lt;A)   move(-s+5,s-5);
	while(b3&lt;A)   move(-s+5,s-5);
	move(0,0);    sleep(0.1);
}


//寻直线定位
void dingwei(int s){
	while(AA&lt;E&amp;&amp;CC&gt;E){                      //左边小于，右边大于
	move(s,s);
	}
}


//后定位
void houdingwei(int s){
	while(AA&lt;E&amp;&amp;CC&gt;E){
		move(-s,-s);                            //后定位,小车向后退
	}
}


void houdingwei1(int s){
	move(-s,-s);
	sleep(1);
}




work1(){
dingwei(15);   //一
xunxian(15);
dingwei(15);   //二
xunxian(15);
dingwei(15);    //三
zuohouzhuan(15);
houxunxian(15);
}



work2(){
xunxian(15);
dingwei(15);   //第一个
youzhuan();
xunxian(15);
dingwei(15);    //第二个
xunxian(15);
dingwei(15);     //第三个
youzhuan3(15);
xunxian(15);
dingwei(15);    //第四个
youzhuan4(15);
houxunxian(15);
}



work3(){
xunxian(15);
dingwei(15);   //第一个
zuozhuan(15);
xunxian(10);
dingwei(15);   //第二个
zuozhuan(15); //左小转
xunxian(15);
dingwei(15);   //第三个
zuozhuan(15);
xunxian(30);     //速度加大过障碍物
move(0,0);
sleep(0.1);
dingwei(15);   //第四个
youzhuan();
xunxian(15);
dingwei(15);    //第五个
youzhuan();
xunwanxian(25);    //寻弯线
houxunxian(15);
}


//圆圈
work4(){
move(-10,-10);
sleep(1);
youzhuan();
xunxian(15);
dingwei(15);
zuohouzhuan(15);
houxunxian(15);
xunxian(15);
}




//从圆圈打桩到盲区之前
work5(){
dingwei(15);
zuozhuan(15);                       //左转
houxunxian(15);                     //后巡线
houdingwei(15);                     //后定位
youzhuan();                         //右转
xunxian2(20);                        //回家寻弯线
dingwei(15);
zuozhuan(15);
xunxian(15);
dingwei(15);                        //第三个
zuozhuan(15);
xunxian(25);                        //速度加大，冲过障碍物
dingwei(15);          //1
youzhuan();
xunxian(15);
dingwei(15);            //2           //第四个
youzhuan3(15);                     //右转幅度大
xunxian(15);
dingwei(15);               //3        //第五
xunxian(15);
dingwei(15);                  //4
zuozhuan(15);
xunxian(5);
dingwei(15);         //5                       //第六个    */
zuozhuan(15);                     //左转幅度小
xunxian(15);
dingwei(15);            //6
xunxian(15);
dingwei(15);               //7
youzhuan();
}

//盲区
work8()
{
xunxian(15);
dingwei(15);                      //8
xunxian(15);
dingwei(15);                    //9
youzhuan(15);
xunxian(15);
dingwei(15);                        //10
youzhuan();
}



work6(){
xunxian(15);
houxunxian(15);
}


//打完桩之后回家
work7(){
dingwei(15);
youzhuan();
xunxian(15);
dingwei(15);
xunxian(15);
dingwei(15);
zuozhuan(15);
xunxian(15);
dingwei(15);
move(15,15);
sleep(0.6);
}









//函数列表
//主函数开始
int main()
{
	RobotInit();           /*该函数用于机器人初始化，请勿删除!*/
   	work1();
   work2();
	work3();
	work4();
	work5();
	work8();
	work6();
	work7();
     stop();
}
</Data></File>
